<Application x:Class="ImageManager.App" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
             xmlns:local="clr-namespace:ImageManager" 
             StartupUri="MainWindow.xaml" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             d1p1:Ignorable="d" 
             xmlns:d1p1="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:ie="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:md="clr-namespace:ImageManager.Modle"
             xmlns:sc="clr-namespace:ImageManager.Selector"
             xmlns:cv="clr-namespace:ImageManager.Convert"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:ct="clr-namespace:ImageManager.Control"
             >
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/CommonToolkit;component/ExThemes.xaml"/>
                <ResourceDictionary>


                    <vm:ViewModelLocator x:Key="Locator" d:IsDataSource="True" xmlns:vm="clr-namespace:ImageManager.ViewModel" />

                    <cv:FolderToThumbnailConverter x:Key="FolderToThumbnailConverter"/>
                    <cv:DateTimeToDateConverter x:Key="DateTimeToDateConverter"/>
                    <cv:BoolToVisibiltyConverter x:Key="BoolToVisibilityConverter"/>

                    <Style x:Key="ImageItemStyle" TargetType="ListViewItem">
                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="Margin" Value="2"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListViewItem">
                                    <Border BorderBrush="{TemplateBinding BorderBrush}" 
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Margin="{TemplateBinding Margin}"
                                        Background="{TemplateBinding Background}" ClipToBounds="True">
                                        <ContentPresenter/>
                                        <Border.InputBindings>
                                            <MouseBinding MouseAction="LeftClick" Command="{Binding RelativeSource={RelativeSource AncestorType=Window},Path=DataContext.DetailViewCommand}" CommandParameter="{Binding}"/>
                                        </Border.InputBindings>
                                    </Border>

                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="BorderBrush" Value="#FF007ACC"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="BorderBrush" Value="#FF007ACC"/>
                                        </Trigger>
                                        
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <DataTemplate x:Key="ImageInfoStyle" DataType="{x:Type md:ImageInfos}">

                        <Image Stretch="Uniform" VerticalAlignment="Top" ToolTip="{Binding Name}">
                            <Image.Source>
                                <BitmapImage UriSource="{Binding SourcePath}"
                                             DecodePixelHeight="600"
                                             />
                            </Image.Source>
                        </Image>
                    </DataTemplate>

                    <Style x:Key="HiddenGroupViewHeadBar" TargetType="GridViewColumnHeader">
                        <Setter Property="Visibility" Value="Collapsed"/>
                    </Style>

                    <Style x:Key="TitleTabPanelStyle" TargetType="TabControl">
                        <Setter Property="HorizontalAlignment" Value="Stretch"/>
                        <Setter Property="VerticalAlignment" Value="Stretch"/>
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="TabControl">
                                    <Grid >
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>

                                        <StackPanel Orientation="Horizontal" IsItemsHost="True" SnapsToDevicePixels="True" UseLayoutRounding="True"
                                                Background="{TemplateBinding Background}"
                                                HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                                VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                                Margin="0" 
                                                >
                                        </StackPanel>

                                        <Border Grid.Row="1" 
                                            Margin="{TemplateBinding Margin}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="{TemplateBinding Background}" >

                                            <ContentPresenter ContentSource="SelectedContent"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                               
                                                          />
                                        </Border>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="TitleTabItemStyle" TargetType="TabItem">
                        <Setter Property="MinWidth" Value="32"/>
                        <Setter Property="Margin" Value="8"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="TabItem">
                                    <Grid Margin="6,0">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <ContentPresenter  x:Name="PART_Selected_Content"  ContentSource="Header" TextElement.Foreground="Gray"
                                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                                        <Border Grid.Row="1" x:Name="PART_Selected_Bar" Height="2" Margin="0,4,0,1"/>
                                    </Grid>

                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <!--<Setter Property="Background" Value="Orange" TargetName="PART_Selected_Bar" />-->
                                            <Setter Property="TextElement.Foreground" Value="DarkGray" TargetName="PART_Selected_Content" />
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Background" Value="Red" TargetName="PART_Selected_Bar"/>
                                            <Setter Property="TextElement.Foreground" Value="Black" TargetName="PART_Selected_Content" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>


                    <Style x:Key="LibItemStyle" TargetType="ListViewItem">
                        <Setter Property="Width" Value="340"/>
                        <Setter Property="Height" Value="150"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="Margin" Value="10"/>
                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListViewItem">
                                    <Grid Margin="{TemplateBinding Margin}" >
                                        <Border 
                                            BorderThickness="{TemplateBinding BorderThickness}"  
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            Background="{TemplateBinding Background}"
                                            >
                                            <ContentPresenter/>
                                        </Border>
                                        <Rectangle x:Name="PART_OverMask" Fill="Transparent" IsHitTestVisible="False"/>
                                    </Grid>

                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter Property="Fill" Value="#0F232323" TargetName="PART_OverMask"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <DataTemplate x:Key="LibItemDataAddStyle" DataType="{x:Type md:LibraryInfos}">
                        <Border>
                            <Grid Background="OrangeRed" TextElement.Foreground="White">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <Border Background="Transparent" Grid.Row="1">
                                    <StackPanel Orientation="Vertical"  Margin="10,0,10,4">
                                        <TextBlock Text="{Binding Name}" FontSize="14" Margin="0,2" UseLayoutRounding="True"/>
                                        <TextBlock Text="{Binding Path}" FontSize="12" UseLayoutRounding="True"/>
                                    </StackPanel>
                                </Border>
                                <TextBlock Grid.Row="1" HorizontalAlignment="Right" VerticalAlignment="Center"
                                       Width="46"  Background="Transparent" Text="&#xf65e;" Style="{StaticResource Icon_Awesome_Regular}" />
                            </Grid>
                            <Border.InputBindings>
                                <MouseBinding MouseAction="LeftClick" Command="{Binding RelativeSource={RelativeSource AncestorType=Window},Path=DataContext.AddNewLibraryCommand}"/>
                            </Border.InputBindings>
                        </Border>
                    </DataTemplate>

                    <DataTemplate x:Key="LibItemDataNodeStyle" DataType="{x:Type md:LibraryInfos}">
                        <Grid>
                            <Rectangle IsHitTestVisible="False" 
                                Height="{Binding ElementName=PART_HoldPanel,Path=ActualHeight}"
                                Width="{Binding ElementName=PART_HoldPanel,Path=ActualWidth}"
                                Fill="White"
                                >
                                <Rectangle.Effect>
                                    <DropShadowEffect Color="Gray" Direction="0"  BlurRadius="8" ShadowDepth="0"/>
                                </Rectangle.Effect>
                            </Rectangle>

                            <Grid x:Name="PART_HoldPanel" Background="White" SnapsToDevicePixels="True"  UseLayoutRounding="True">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <Image Source="{Binding Thumbnial}" Stretch="UniformToFill">
                                    <ie:Interaction.Triggers>
                                        <ie:EventTrigger EventName="Loaded">
                                            <ie:InvokeCommandAction Command="{Binding DataContext.CheckLibraryThumbnailCommand,RelativeSource={RelativeSource AncestorType=Window}}" CommandParameter="{Binding}"/>
                                        </ie:EventTrigger>
                                    </ie:Interaction.Triggers>
                                </Image>

                                <Border Grid.Row="1">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="WhiteSmoke" Offset="0"/>
                                            <GradientStop Color="White" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                    <StackPanel Orientation="Vertical"  Margin="10,0,10,4" SnapsToDevicePixels="True"  UseLayoutRounding="True">
                                        <TextBlock Text="{Binding Name}" FontSize="14" Margin="0,2"  TextOptions.TextFormattingMode="Display"/>
                                        <TextBlock Text="{Binding Path}" FontSize="12"  TextOptions.TextFormattingMode="Display"/>
                                    </StackPanel>
                                </Border>
                                <Button Grid.Row="1" HorizontalAlignment="Right" Width="46" 
                                    BorderThickness="0" Background="Transparent"
                                    Command="{Binding RelativeSource={RelativeSource AncestorType=Window},Path=DataContext.RemoveLibraryCommand}" CommandParameter="{Binding }">
                                    <Button.Content>
                                        <TextBlock Text="&#xf65d;" Style="{StaticResource Icon_Awesome_Regular}" Foreground="Gray"/>
                                    </Button.Content>

                                </Button>
                            </Grid>

                        </Grid>

                    </DataTemplate>

                    <sc:LibStyleSelector x:Key="LibStySelector" AddType="{StaticResource LibItemDataAddStyle }" NodeType="{StaticResource LibItemDataNodeStyle}"/>

                    <DataTemplate x:Key="ImageTagsItemDataStyle" DataType="{x:Type sys:String}">
                        <Border  Height="28">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding }" FontSize="16" VerticalAlignment="Center"/>
                                <Button Style="{StaticResource Button_Frame}"
                                        Visibility="{Binding RelativeSource={RelativeSource AncestorType=ListViewItem},Path=IsMouseOver,Converter={StaticResource BoolToVisibilityConverter}}"
                                        Command="{Binding RelativeSource={RelativeSource AncestorType=ListView},Path=DataContext.RemoveTagCommand}"
                                        CommandParameter="{Binding}" ToolTip="移除此标签"
                                        VerticalContentAlignment="Center"
                                        Cursor="Hand" Width="28" Margin="0" Height="28">
                                    <TextBlock Text="x" Style="{StaticResource Icon_Awesome_Regular}" Foreground="Red" FontSize="16" />
                                </Button>
                            </StackPanel>
                            
                        </Border>
                    </DataTemplate>

                    <Style x:Key="ImageTagItemStyle" TargetType="ListViewItem">
                        <Setter Property="Margin" Value="2"/>
                        
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListViewItem">
                                    <Border 
                                            CornerRadius="10" 
                                            Padding="{TemplateBinding Padding}"
                                            Margin="{TemplateBinding Margin}"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                            >
                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>

                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="BorderBrush" Value="OrangeRed"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="Toggle_Frame" TargetType="ToggleButton">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ToggleButton">
                                    <Border Padding="{TemplateBinding Padding}"
                                            Margin="{TemplateBinding Margin}"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                            Width="{TemplateBinding Width}"
                                            Height="{TemplateBinding Height}"
                                            >
                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                          TextElement.Foreground="{TemplateBinding Foreground}"
                                                          />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        
                    </Style>

                    <Style x:Key="TagToggleStyle" BasedOn="{StaticResource Toggle_Frame}" TargetType="ToggleButton">
                        <Setter Property="ToolTip" Value="添加标签"/>
                        <Setter Property="Cursor" Value="Hand"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Foreground" Value="DimGray"/>
                        <Style.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="ToolTip" Value="取消"/>
                                <Setter Property="Foreground" Value="Red"/>
                                <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                                <Setter Property="RenderTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="45"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                    
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
        
    </Application.Resources>
</Application>